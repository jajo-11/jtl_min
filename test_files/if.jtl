var sum = 1
if sum <= 1 then {
    // print(sum)
    sum = (sum + 1) * sum
    {
        let a = 1 * 2
    }
}

let no = if sum > 0 and 1 == 1 then sum else -sum

/*
>>>
%1_sum = alloc 8 align 8
%2_no = alloc 8 align 8
%11_a = alloc 8 align 8
store i64 1 into %1_sum
%5 = load i64 %1_sum
%6 = leq u64 %5, 1
jump_if %6 is zero 4_if_end else 3_if_body
3_if_body:
%7 = load i64 %1_sum
%8 = add i64 %7, 1
%9 = load i64 %1_sum
%10 = mul i64 %8, %9
store i64 %10 into %1_sum
%12 = mul i64 1, 2
store i64 %12 into %11_a
jump 4_if_end
4_if_end:
%16 = load i64 %1_sum
%17 = greater u64 %16, 0
18_and_left:
jump_if %17 is zero 20_and else 19_and_right
19_and_right:
%21 = eq u64 1, 1
jump 20_and
20_and:
%22 = PHI u64 (%17 from 18_and_left), (%21 from 19_and_right)
jump_if %22 is zero 14_if_false else 13_if_true
13_if_true:
%23 = load i64 %1_sum
jump 15_if_end
14_if_false:
%24 = load i64 %1_sum
%25 = neg i64 %24
jump 15_if_end
15_if_end:
%26 = PHI i64 (%23 from 13_if_true), (%25 from 14_if_false)
store i64 %26 into %2_no
<<<
*/