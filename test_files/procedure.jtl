const sum = proc(a: int, b: int) -> f32 {
    return cast(f32, a + b)
}

const main = proc() -> int {
    let factor: i64 = 10
    return cast(int, sum(1, 2) * factor)
}

/*
>>>
procedure proc1_sum (<i32>$proc1_sum_arg_a, <i32>$proc1_sum_arg_b) -> f32:
proc1_sum_body:
  load <i32>$proc1_sum_arg_a -> <i32>%t1_a
  load <i32>$proc1_sum_arg_b -> <i32>%t2_b
  add <i32>%t1_a <i32>%t2_b -> <i32>%t3_return
  cast <i32>%t3_return -> <f32>%t4_return
  return <f32>%t4_return

procedure proc2_main () -> i32:
proc2_main_body:
  store <i64>10 -> <i64>$v1_factor
  call proc1_sum (<i32>1, <i32>2) -> <f32>%t5_return
  load <i64>$v1_factor -> <i64>%t6_factor
  cast <i64>%t6_factor -> <f32>%t7_return
  multiply <f32>%t5_return <f32>%t7_return -> <f32>%t8_return
  cast <f32>%t8_return -> <i32>%t9_return
  return <i32>%t9_return


global_block:

main: Found
<<<
*/